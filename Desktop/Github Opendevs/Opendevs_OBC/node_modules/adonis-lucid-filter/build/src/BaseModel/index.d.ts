/// <reference path="../../adonis-typings/index.d.ts" />
/// <reference types="@adonisjs/lucid" />
import { LucidFilter } from '@ioc:Adonis/Addons/LucidFilter';
import { LucidModel, LucidRow, ModelQueryBuilderContract } from '@ioc:Adonis/Lucid/Orm';
/**
 * Class to filtering AdonisJS Lucid ORM
 *
 * @class BaseModelFilter
 * @constructor
 */
export declare class BaseModelFilter implements LucidFilter {
    $query: ModelQueryBuilderContract<LucidModel, LucidRow>;
    $input: object;
    ['constructor']: typeof BaseModelFilter;
    static blacklist: string[];
    static dropId: boolean;
    static camelCase: boolean;
    setup?($query: any): void;
    $blacklist: string[];
    constructor($query: ModelQueryBuilderContract<LucidModel, LucidRow>, $input: object);
    handle(): any;
    whitelistMethod(method: any): boolean;
    $filterByInput(): void;
    $getFilterMethod(key: string): string;
    static removeEmptyInput(input: object): object;
    $methodIsCallable(method: string): boolean;
    $methodIsBlacklisted(method: string): boolean;
}
export default BaseModelFilter;
